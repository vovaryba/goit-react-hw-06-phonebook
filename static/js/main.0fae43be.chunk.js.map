{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactsList/Contact.js","redux/contacts/contacts-types.js","redux/contacts/contacts-actions.js","components/ContactsList/ContactsList.js","components/Form/Form.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactsList/Contact.module.css","components/Form/Form.module.css"],"names":["module","exports","Contact","name","number","onDeleteContact","className","s","li","button","onClick","types","ADD","DELETE","CHANGE_FILTER","data","type","payload","id","uuidv4","contactId","value","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","includes","connect","contacts","items","dispatch","contactsActions","map","onSubmit","useState","setName","setNumber","useSelector","state","useDispatch","handleChange","e","target","reset","form","preventDefault","contactCoincide","find","prevContact","alert","onChange","input","pattern","title","required","App","combineReducers","rootReducer","contactsReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fae43be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__EGId2\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Contact.module.css';\r\n\r\nconst Contact = ({ name, number, onDeleteContact }) => {\r\n  return (\r\n    <li className={s.li}>\r\n      <span className={s.name}>{name}:</span>\r\n      <span className={s.number}>{number}</span>\r\n      <button className={s.button} onClick={onDeleteContact}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","const ADD = 'contacts/add';\r\nconst DELETE = 'contacts/delete';\r\nconst CHANGE_FILTER = 'contacts/changeFilter';\r\n\r\nconst types = { ADD, DELETE, CHANGE_FILTER };\r\n\r\nexport default types;\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport types from './contacts-types';\r\n\r\nconst addContact = data => ({\r\n  type: types.ADD,\r\n  payload: {\r\n    id: uuidv4(),\r\n    name: data.name,\r\n    number: data.number,\r\n  },\r\n});\r\n\r\nconst deleteContact = contactId => ({\r\n  type: types.DELETE,\r\n  payload: contactId,\r\n});\r\n\r\nconst changeFilter = value => ({\r\n  type: types.CHANGE_FILTER,\r\n  payload: value,\r\n});\r\n\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Contact from './Contact';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <Contact\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          onDeleteContact={() => onDeleteContact(id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getVisibleContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: getVisibleContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(contactsActions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import { useState } from 'react';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\nimport s from './Form.module.css';\r\n\r\nfunction Form() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(state => state.contacts.items);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const contactCoincide = contacts.find(\r\n      prevContact => prevContact.name === name,\r\n    );\r\n    if (contactCoincide) {\r\n      alert(`${contactCoincide.name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    dispatch(contactsActions.addContact({ name, number }));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          value={name}\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className={s.input}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          value={number}\r\n          onChange={handleChange}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          className={s.input}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button className={s.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) =>\r\n    dispatch(contactsActions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        value={value}\r\n        onChange={onChange}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        className={s.input}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(contactsActions.changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import ContactsList from './components/ContactsList';\nimport Form from './components/Form';\nimport Filter from './components/Filter';\n\nfunction App() {\n  //   useEffect(() => {\n  //     const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n  //     if (parsedContacts) {\n  //       setContacts(parsedContacts);\n  //     }\n  //   }, []);\n\n  //   useEffect(() => {\n  //     localStorage.setItem('contacts', JSON.stringify(contacts));\n  //   }, [contacts]);\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport types from './contacts-types';\r\n\r\nconst items = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD:\r\n      return [...state, payload];\r\n\r\n    case types.DELETE:\r\n      return state.filter(({ id }) => id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst filter = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case types.CHANGE_FILTER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"Contact_li__QGv9F\",\"name\":\"Contact_name__1QJlC\",\"number\":\"Contact_number__2BUkd\",\"button\":\"Contact_button__1xofs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__E4mZs\",\"input\":\"Form_input__2iwXb\",\"button\":\"Form_button__ZeQrv\"};"],"sourceRoot":""}