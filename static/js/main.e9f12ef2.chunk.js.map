{"version":3,"sources":["components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-selectors.js","components/ContactsList/Contact.js","components/ContactsList/ContactsList.js","components/Form/Form.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactsList/Contact.module.css","components/Form/Form.module.css"],"names":["module","exports","actions","addContact","createAction","data","payload","id","uuidv4","name","number","deleteContact","changeFilter","getFilter","state","contacts","filter","getContacts","items","getVisibleContacts","normalizedFilter","toLowerCase","includes","Contact","onDeleteContact","className","s","li","button","onClick","ContactsList","useSelector","dispatch","useDispatch","map","Form","useState","setName","setNumber","handleChange","e","target","value","reset","form","onSubmit","preventDefault","contactCoincide","find","prevContact","alert","onChange","type","input","pattern","title","required","Filter","App","createReducer","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","storePersistor","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e9f12ef2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__EGId2\"};","import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add', data => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name: data.name,\r\n    number: data.number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst actions = { addContact, deleteContact, changeFilter };\r\n\r\nexport default actions;\r\n","export const getFilter = state => state.contacts.filter;\r\n\r\nexport const getContacts = state => state.contacts.items;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Contact.module.css';\r\n\r\nconst Contact = ({ name, number, onDeleteContact }) => {\r\n  return (\r\n    <li className={s.li}>\r\n      <span className={s.name}>{name}:</span>\r\n      <span className={s.number}>{number}</span>\r\n      <button className={s.button} onClick={onDeleteContact}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport actions from '../../redux/contacts/contacts-actions';\r\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\r\nimport Contact from './Contact';\r\n\r\nconst ContactsList = () => {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = id => dispatch(actions.deleteContact(id));\r\n\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <Contact\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          onDeleteContact={() => onDeleteContact(id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport actions from '../../redux/contacts/contacts-actions';\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\r\nimport s from './Form.module.css';\r\n\r\nfunction Form() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const contactCoincide = contacts.find(\r\n      prevContact => prevContact.name === name,\r\n    );\r\n    if (contactCoincide) {\r\n      alert(`${contactCoincide.name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    dispatch(actions.addContact({ name, number }));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          value={name}\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className={s.input}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          value={number}\r\n          onChange={handleChange}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          className={s.input}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button className={s.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport actions from '../../redux/contacts/contacts-actions';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const change = e => dispatch(actions.changeFilter(e.target.value));\r\n\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        value={value}\r\n        onChange={change}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        className={s.input}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import ContactsList from './components/ContactsList';\nimport Form from './components/Form';\nimport Filter from './components/Filter';\n\nfunction App() {\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst storePersistor = { store, persistor };\r\n\r\nexport default storePersistor;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"Contact_li__QGv9F\",\"name\":\"Contact_name__1QJlC\",\"number\":\"Contact_number__2BUkd\",\"button\":\"Contact_button__1xofs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__E4mZs\",\"input\":\"Form_input__2iwXb\",\"button\":\"Form_button__ZeQrv\"};"],"sourceRoot":""}